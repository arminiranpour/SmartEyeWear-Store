// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SmartEyewearStore.Data;

#nullable disable

namespace SmartEyewearStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812031137_zero")]
    partial class zero
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BRANDID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("BrandId")
                        .HasName("PK_BRANDS");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_BRANDS_NAME");

                    b.ToTable("BRAND", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COLORID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("ColorId")
                        .HasName("PK_COLORS");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_COLORS_NAME");

                    b.ToTable("COLOR", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FEATUREID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("CODE");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LABEL");

                    b.HasKey("FeatureId")
                        .HasName("PK_FEATURES");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_FEATURES_CODE");

                    b.ToTable("FEATURE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.FrameSpecs", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<string>("Gender")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GENDER");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MATERIALID");

                    b.Property<string>("Notes")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOTES");

                    b.Property<int?>("RimStyleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RIMSTYLEID");

                    b.Property<int?>("ShapeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SHAPEID");

                    b.Property<decimal?>("WeightG")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("WEIGHTG");

                    b.HasKey("ProductId")
                        .HasName("PK_FRAMESPECS");

                    b.HasIndex("MaterialId")
                        .HasDatabaseName("IX_FRAMESPECS_MATERIALID");

                    b.HasIndex("RimStyleId")
                        .HasDatabaseName("IX_FRAMESPECS_RIMSTYLEID");

                    b.HasIndex("ShapeId")
                        .HasDatabaseName("IX_FRAMESPECS_SHAPEID");

                    b.ToTable("FRAME_SPECS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MATERIALID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("MaterialId")
                        .HasName("PK_MATERIALS");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_MATERIALS_NAME");

                    b.ToTable("MATERIAL", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BRANDID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDAT")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISACTIVE")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("SLUG");

                    b.Property<string>("SourceUrl")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SOURCEURL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDAT");

                    b.HasKey("ProductId")
                        .HasName("PK_PRODUCTS");

                    b.HasIndex("BrandId")
                        .HasDatabaseName("IX_PRODUCT_BRAND_ID");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("IX_PRODUCTS_SLUG");

                    b.ToTable("PRODUCT", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductFeature", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<int>("FeatureId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FEATUREID");

                    b.HasKey("ProductId", "FeatureId")
                        .HasName("PK_PRODUCTFEATURES");

                    b.HasIndex("FeatureId")
                        .HasDatabaseName("IX_PRODUCTFEATURES_FEATUREID");

                    b.ToTable("PRODUCT_FEATURE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<int>("TagId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TAGID");

                    b.HasKey("ProductId", "TagId")
                        .HasName("PK_PRODUCTTAGS");

                    b.HasIndex("TagId")
                        .HasDatabaseName("IX_PRODUCTTAGS_TAGID");

                    b.ToTable("PRODUCT_TAG", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductVariant", b =>
                {
                    b.Property<int>("VariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VariantId"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COLORID");

                    b.Property<int>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISDEFAULT")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ProductId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<string>("SizeLabel")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SIZELABEL");

                    b.Property<string>("Sku")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SKU");

                    b.HasKey("VariantId")
                        .HasName("PK_PRODUCTVARIANTS");

                    b.HasIndex("ColorId")
                        .HasDatabaseName("IX_PRODUCTVARIANTS_COLORID");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_PRODUCTVARIANTS_PRODUCTID");

                    b.ToTable("PRODUCT_VARIANT", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.RatingSummary", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<decimal?>("AvgRating")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("AVGRATING");

                    b.Property<int?>("RatingCount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RATINGCOUNT");

                    b.HasKey("ProductId")
                        .HasName("PK_RATINGSUMMARIES");

                    b.ToTable("RATING_SUMMARY", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.RimStyle", b =>
                {
                    b.Property<int>("RimStyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RIMSTYLEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RimStyleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("RimStyleId")
                        .HasName("PK_RIMSTYLES");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_RIMSTYLES_NAME");

                    b.ToTable("RIM_STYLE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Shape", b =>
                {
                    b.Property<int>("ShapeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SHAPEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShapeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("ShapeId")
                        .HasName("PK_SHAPES");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_SHAPES_NAME");

                    b.ToTable("SHAPE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TAGID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.HasKey("TagId")
                        .HasName("PK_TAGS");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_TAGS_NAME");

                    b.ToTable("TAG", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantDimensions", b =>
                {
                    b.Property<int>("VariantId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    b.Property<decimal>("BridgeWidthMm")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("BRIDGEWIDTHMM");

                    b.Property<decimal?>("FrameWidthMm")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("FRAMEWIDTHMM");

                    b.Property<decimal?>("LensHeightMm")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("LENSHEIGHTMM");

                    b.Property<decimal>("LensWidthMm")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("LENSWIDTHMM");

                    b.Property<decimal>("TempleLengthMm")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("TEMPLELENGTHMM");

                    b.HasKey("VariantId")
                        .HasName("PK_VARIANTDIMENSIONS");

                    b.ToTable("VARIANT_DIMENSIONS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IMAGEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("Role")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ROLE");

                    b.Property<int>("SortOrder")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SORTORDER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("URL");

                    b.Property<int>("VariantId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    b.HasKey("ImageId")
                        .HasName("PK_VARIANTIMAGES");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("IX_VARIANTIMAGES_VARIANTID");

                    b.HasIndex("VariantId", "SortOrder")
                        .IsUnique()
                        .HasDatabaseName("IX_VARIANTIMAGES_VARIANTID_SORTORDER");

                    b.ToTable("VARIANT_IMAGE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantInventory", b =>
                {
                    b.Property<int>("VariantId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    b.Property<int>("Backorderable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("BACKORDERABLE")
                        .HasDefaultValueSql("0");

                    b.Property<int>("QtyOnHand")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTYONHAND");

                    b.HasKey("VariantId")
                        .HasName("PK_VARIANTINVENTORIES");

                    b.ToTable("VARIANT_INVENTORY", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantPrice", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRICEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceId"));

                    b.Property<int>("BasePriceCents")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BASEPRICECENTS");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CURRENCY");

                    b.Property<int?>("SalePriceCents")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SALEPRICECENTS");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("VALIDFROM");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("VALIDTO");

                    b.Property<int>("VariantId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    b.HasKey("PriceId")
                        .HasName("PK_VARIANTPRICES");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("IX_VARIANTPRICES_VARIANTID");

                    b.ToTable("VARIANT_PRICE", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BridgeWidth")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BRIDGE_WIDTH");

                    b.Property<string>("BuyingFrequency")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BUYING_FREQUENCY");

                    b.Property<string>("Colors")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COLORS");

                    b.Property<string>("DayLocation")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DAY_LOCATION");

                    b.Property<string>("FaceShape")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FACE_SHAPE");

                    b.Property<string>("FavoriteShapes")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FAVORITE_SHAPES");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FEATURES");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GENDER");

                    b.Property<string>("HeadSize")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HEAD_SIZE");

                    b.Property<int?>("LensWidth")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LENS_WIDTH");

                    b.Property<string>("Lifestyle")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LIFESTYLE");

                    b.Property<string>("Materials")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MATERIALS");

                    b.Property<int?>("Prescription")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("PRESCRIPTION");

                    b.Property<string>("PriceFocus")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PRICE_FOCUS");

                    b.Property<string>("ScreenTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SCREEN_TIME");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STYLE");

                    b.Property<int?>("TempleLength")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TEMPLE_LENGTH");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id")
                        .HasName("PK_SURVEY_ANSWERS");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_SURVEY_ANSWERS_USER_ID");

                    b.ToTable("SURVEYANSWER", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK_USERS");

                    b.ToTable("USERS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.UserInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GuestId")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GUESTID");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INTERACTIONTYPE");

                    b.Property<int?>("Score")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SCORE");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.Property<int>("VariantId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VARIANTID");

                    b.HasKey("Id")
                        .HasName("PK_USER_INTERACTIONS");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_USER_INTERACTIONS_USERID");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("IX_USER_INTERACTIONS_VARIANTID");

                    b.ToTable("USERINTERACTIONS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.FrameSpecs", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Material", "Material")
                        .WithMany("FrameSpecs")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_FRAMESPECS_MATERIALS_MATERIALID");

                    b.HasOne("SmartEyewearStore.Models.Catalog.Product", "Product")
                        .WithOne("FrameSpecs")
                        .HasForeignKey("SmartEyewearStore.Models.Catalog.FrameSpecs", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FRAME_SPECS_PRODUCT");

                    b.HasOne("SmartEyewearStore.Models.Catalog.RimStyle", "RimStyle")
                        .WithMany("FrameSpecs")
                        .HasForeignKey("RimStyleId")
                        .HasConstraintName("FK_FRAMESPECS_RIMSTYLES_RIMSTYLEID");

                    b.HasOne("SmartEyewearStore.Models.Catalog.Shape", "Shape")
                        .WithMany("FrameSpecs")
                        .HasForeignKey("ShapeId")
                        .HasConstraintName("FK_FRAMESPECS_SHAPES_SHAPEID");

                    b.Navigation("Material");

                    b.Navigation("Product");

                    b.Navigation("RimStyle");

                    b.Navigation("Shape");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Product", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_PRODUCT_BRAND");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductFeature", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Feature", "Feature")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_FEATURE_FEATURE");

                    b.HasOne("SmartEyewearStore.Models.Catalog.Product", "Product")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_FEATURE_PRODUCT");

                    b.Navigation("Feature");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductTag", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_TAG_PRODUCT");

                    b.HasOne("SmartEyewearStore.Models.Catalog.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_TAG_TAG");

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductVariant", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Color", "Color")
                        .WithMany("Variants")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_PRODUCTVARIANTS_COLORS_COLORID");

                    b.HasOne("SmartEyewearStore.Models.Catalog.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCT_VARIANT_PRODUCT");

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.RatingSummary", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.Product", "Product")
                        .WithOne("RatingSummary")
                        .HasForeignKey("SmartEyewearStore.Models.Catalog.RatingSummary", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RATING_SUMMARY_PRODUCT");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantDimensions", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.ProductVariant", "Variant")
                        .WithOne("Dimensions")
                        .HasForeignKey("SmartEyewearStore.Models.Catalog.VariantDimensions", "VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VARIANT_DIMENSIONS");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantImage", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.ProductVariant", "Variant")
                        .WithMany("Images")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VARIANT_IMAGE_VARIANT");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantInventory", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.ProductVariant", "Variant")
                        .WithOne("Inventory")
                        .HasForeignKey("SmartEyewearStore.Models.Catalog.VariantInventory", "VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VARIANT_INVENTORY_VARIANT");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.VariantPrice", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Catalog.ProductVariant", "Variant")
                        .WithMany("Prices")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VARIANT_PRICE_VARIANT");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyAnswer", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.User", "User")
                        .WithMany("Surveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SA_USER");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.UserInteraction", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UI_USR");

                    b.HasOne("SmartEyewearStore.Models.Catalog.ProductVariant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UI_VARIANT");

                    b.Navigation("User");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Color", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Feature", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Material", b =>
                {
                    b.Navigation("FrameSpecs");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Product", b =>
                {
                    b.Navigation("FrameSpecs");

                    b.Navigation("ProductFeatures");

                    b.Navigation("ProductTags");

                    b.Navigation("RatingSummary");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.ProductVariant", b =>
                {
                    b.Navigation("Dimensions");

                    b.Navigation("Images");

                    b.Navigation("Inventory");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.RimStyle", b =>
                {
                    b.Navigation("FrameSpecs");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Shape", b =>
                {
                    b.Navigation("FrameSpecs");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Catalog.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.User", b =>
                {
                    b.Navigation("Surveys");
                });
#pragma warning restore 612, 618
        }
    }
}
