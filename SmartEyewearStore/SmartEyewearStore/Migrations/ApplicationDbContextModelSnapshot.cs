// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SmartEyewearStore.Data;

#nullable disable

namespace SmartEyewearStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartEyewearStore.Models.Glasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COLOR");

                    b.Property<int>("GlassesInfoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GLASSESINFOID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IMAGEURL");

                    b.Property<int?>("InStock")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("INSTOCK");

                    b.Property<int>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISACTIVE");

                    b.Property<decimal>("PopularityScore")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("POPULARITYSCORE");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("PRICE");

                    b.HasKey("Id")
                        .HasName("PK_GLASSES");

                    b.HasIndex("GlassesInfoId")
                        .HasDatabaseName("IX_GLASSES_GLASSESINFOID");

                    b.ToTable("GLASSES", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.GlassesFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FEATURE");

                    b.Property<int>("GlassesInfoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GLASSESINFOID");

                    b.HasKey("Id")
                        .HasName("PK_GLASSES_FEATURES");

                    b.HasIndex("GlassesInfoId")
                        .HasDatabaseName("IX_GLASSES_FEATURES_GLASSESINFOID");

                    b.ToTable("GLASSES_FEATURES", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.GlassesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BRAND");

                    b.Property<decimal?>("BridgeWidth")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("BRIDGEWIDTH");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Fit")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FIT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GENDER");

                    b.Property<int?>("HasAntiScratchCoating")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("HASANTISCRATCHCOATING");

                    b.Property<string>("HeadSize")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HEADSIZE");

                    b.Property<decimal?>("LensWidth")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("LENSWIDTH");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MATERIAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Rim")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RIM");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SHAPE");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SIZE");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STYLE");

                    b.Property<decimal?>("TempleLength")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("TEMPLELENGTH");

                    b.Property<decimal?>("WeightGrams")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("WEIGHTGRAMS");

                    b.HasKey("Id")
                        .HasName("PK_GLASSES_INFO");

                    b.ToTable("GLASSESINFO", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BridgeWidth")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BRIDGE_WIDTH");

                    b.Property<string>("BuyingFrequency")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BUYING_FREQUENCY");

                    b.Property<string>("DayLocation")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DAY_LOCATION");

                    b.Property<string>("FaceShape")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FACE_SHAPE");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GENDER");

                    b.Property<string>("HeadSize")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HEAD_SIZE");

                    b.Property<int?>("LensWidth")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LENS_WIDTH");

                    b.Property<string>("Lifestyle")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LIFESTYLE");

                    b.Property<int?>("Prescription")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("PRESCRIPTION");

                    b.Property<string>("PriceFocus")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PRICE_FOCUS");

                    b.Property<string>("ScreenTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SCREEN_TIME");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STYLE");

                    b.Property<int?>("TempleLength")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TEMPLE_LENGTH");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id")
                        .HasName("PK_SURVEY_ANSWERS");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_SURVEY_ANSWERS_USER_ID");

                    b.ToTable("SURVEYANSWER", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyMultiChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SurveyId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SURVEY_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VALUE");

                    b.HasKey("Id")
                        .HasName("PK_SURVEY_MULTI_CHOICES");

                    b.HasIndex("SurveyId")
                        .HasDatabaseName("IX_SURVEY_MULTI_CHOICES_SURVEY_ID");

                    b.ToTable("SURVEY_MULTI_CHOICES", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK_USERS");

                    b.ToTable("USERS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.UserInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GlassId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GLASSID");

                    b.Property<string>("GuestId")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GUESTID");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INTERACTIONTYPE");

                    b.Property<int?>("Score")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SCORE");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.HasKey("Id")
                        .HasName("PK_USER_INTERACTIONS");

                    b.HasIndex("GlassId")
                        .HasDatabaseName("IX_USER_INTERACTIONS_GLASSID");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_USER_INTERACTIONS_USERID");

                    b.ToTable("USERINTERACTIONS", "DBS311_252NAA12");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.Glasses", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.GlassesInfo", "GlassesInfo")
                        .WithMany()
                        .HasForeignKey("GlassesInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GLS_INFO");

                    b.Navigation("GlassesInfo");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.GlassesFeature", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.GlassesInfo", "GlassesInfo")
                        .WithMany("FeaturesList")
                        .HasForeignKey("GlassesInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GF_INFO");

                    b.Navigation("GlassesInfo");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyAnswer", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.User", "User")
                        .WithMany("Surveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SA_USER");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyMultiChoice", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.SurveyAnswer", "Survey")
                        .WithMany("MultiChoices")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SM_SURVEY");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.UserInteraction", b =>
                {
                    b.HasOne("SmartEyewearStore.Models.Glasses", "Glass")
                        .WithMany()
                        .HasForeignKey("GlassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UI_GLS");

                    b.HasOne("SmartEyewearStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UI_USR");

                    b.Navigation("Glass");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.GlassesInfo", b =>
                {
                    b.Navigation("FeaturesList");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.SurveyAnswer", b =>
                {
                    b.Navigation("MultiChoices");
                });

            modelBuilder.Entity("SmartEyewearStore.Models.User", b =>
                {
                    b.Navigation("Surveys");
                });
#pragma warning restore 612, 618
        }
    }
}
